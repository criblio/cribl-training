{
  "type": "object",
  "title": "",
  "required": ["timeWindow", "aggregations"],
  "properties": {
    "passthrough": {
      "type": "boolean",
      "title": "Passthrough Mode",
      "description": "Determines whether or not to passthrough the original events along with the aggregate(s) events.",
      "default": false
    },
    "sufficientStatsOnly": {
      "type": "boolean",
      "title": "Sufficient Stats Mode",
      "description": "Determines whether or not to output only the sufficient statistics for the supplied aggregate(s).",
      "default": false
    },
    "metricsMode": {
      "type": "boolean",
      "title": "Metrics Mode",
      "description": "Determines whether or not to output the aggregates as metrics or events",
      "default": false
    },
    "timeWindow": {
      "pattern": "\\d+[sm]$",
      "type": "string",
      "title": "Time Window",
      "description": "The time span of the tumbling window for aggregating events. Must be a valid time string (e.g., 10s).",
      "default": "10s"
    },
    "aggregations": {
      "type": "array",
      "title": "Aggregates",
      "description": "Aggregate function(s) to perform on events. E.g., sum(bytes).where(action=='REJECT').as(TotalBytes)",
      "minItems": 1,
      "items": {
        "type": "string",
        "aggregationExpression": true
      }
    },
    "groupbys": {
      "type": "array",
      "title": "Group By Fields",
      "description": "Fields to group aggregates by.",
      "items": {
        "type": "string"
      }
    },
    "flushEventLimit": {
      "type": "number",
      "title": "Aggregation Event Limit",
      "description": "The maximum number events to include in any given aggregation event.",
      "minimum": 1
    },
    "flushMemLimit": {
      "type": "string",
      "title": "Aggregation Memory Limit",
      "description": "The memory limit to impose upon aggregations.",
      "pattern": "^\\d+\\s*(?:\\w{2})?$"
    },
    "cumulative": {
      "type": "boolean",
      "title": "Cumulative Aggregations",
      "description": "Determines if the aggregations should be reset to 0 or retained for cumulative aggregations when flushing out an aggregation table event.",
      "default": false
    }
    ,
    "add": {
      "title": "Evaluate Fields",
      "description": "Set of key-value pairs to evaluate and add/set",
      "type": "array",
      "items": {
        "type": "object",
        "required": ["value"],
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Field Name"
          },
          "value": {
            "type": "string",
            "title": "Value Expression",
            "description": "JavaScript expression to compute the value (can be constant)",
            "jsExpression": true
          }
        }
      }
    }    
  },
  "dependencies": {
    "cumulative": {
      "oneOf": [
        {
          "properties": {
            "cumulative": {
              "enum": [true]
            }
          }
        },
        {
          "properties": {
            "cumulative": {
              "enum": [false]
            },
            "lagTolerance": {
              "type": "string",
              "title": "Lag Tolerance",
              "description": "The lag tolerance represents the tumbling window tolerance to late events. Must be a valid time string (e.g., 10s).",
              "pattern": "\\d+[sm]$"
            },
            "idleTimeLimit": {
              "type": "string",
              "title": "Idle Bucket Time Limit",
              "description": "The amount of time to wait before flushing a bucket that has not received events. Must be a valid time string (e.g., 10s).",
              "pattern": "\\d+[sm]$"
            }
          }
        }]
      }
    }
  }